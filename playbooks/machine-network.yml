---

# route traffic
# from workstation to VMs on hosts
# On a Mac workstation, add routing. See
#   https://github.com/nickhardiman/ansible-playbook-aap2-refarch/blob/main/files/macos-route-add.sh
# 
# from this host to the VMs on other hosts
# Change the bridge profile using role rhel-system-roles.network 
# Role requires gather_facts to set ansible_python
# example in
#  https://github.com/linux-system-roles/network/blob/main/examples/route_table_support.yml
# not convinced this finishes with re-activation "nmcli con up bridge-public0"
# IP addresses and other nework values are described in 
#   https://github.com/nickhardiman/ansible-playbook-aap2-refarch/blob/main/group_vars/site1/main.yml
#
# One play per hypervisor, not sure how to combine these.
# lab hosts are listed in 
#   https://github.com/nickhardiman/ansible-playbook-aap2-refarch/blob/main/inventory.ini
#
- name: Configure routing for hypervisor_site1
  hosts: hypervisor_site1
  become: true
  gather_facts: true
  roles:
    - role: rhel-system-roles.network
      vars:
        network_connections:
          - name: "{{ public_nmcli_name }}"
            state: up
            type: bridge
            interface_name: "{{ public_bridge_name }}"
            # interface_name defaults to the connection name
            ip:
              route:
              # !!! hardcoded IP addresses
              # replace gateway with site1_ip, site2_ip and site3_ip from vars_file
              # replace network with hostvars['host.site1.example.com']['lab_net_prefix'] from group_vars files
                # - network: 192.168.21.0
                #   prefix: 24
                #   gateway: 192.168.1.253
                - network: 192.168.23.0
                  prefix: 24
                  gateway: 192.168.1.162
                - network: 192.168.25.0
                  prefix: 24
                  gateway: 192.168.1.252
              dhcp4: true
              auto6: true
  tasks:
  
    # check
    # still connected to Internet? 
    - name: Run shell commands to check routing
      ansible.builtin.shell:
        cmd: "{{ item }}"
      loop:
        - ip route list
        - ping -c 1 8.8.8.8
        - host www.google.com
        - curl --fail https://www.redhat.com/
      register: r_route_check

    - name: Display results
      ansible.builtin.debug:
        var: r_route_check


- name: Configure routing for hypervisor_site2
  hosts: hypervisor_site2
  become: true
  gather_facts: true
  roles:
    - role: rhel-system-roles.network
      vars:
        network_connections:
          - name: "{{ public_nmcli_name }}"
            state: up
            type: bridge
            interface_name: "{{ public_bridge_name }}"
            # interface_name defaults to the connection name
            ip:
              route:
                - network: 192.168.21.0
                  prefix: 24
                  gateway: 192.168.1.253
                # - network: 192.168.23.0
                #   prefix: 24
                #   gateway: 192.168.1.162
                - network: 192.168.25.0
                  prefix: 24
                  gateway: 192.168.1.252
              dhcp4: true
              auto6: true
  tasks:
  
    # check
    # still connected to Internet? 
    - name: Run shell commands to check routing
      ansible.builtin.shell:
        cmd: "{{ item }}"
      loop:
        - ip route list
        - ping -c 1 8.8.8.8
        - host www.google.com
        - curl --fail https://www.redhat.com/
      register: r_route_check

    - name: Display results
      ansible.builtin.debug:
        var: r_route_check


- name: Configure routing for hypervisor_site3
  hosts: hypervisor_site3
  become: true
  gather_facts: true
  roles:
    - role: rhel-system-roles.network
      vars:
        network_connections:
          - name: "{{ public_nmcli_name }}"
            state: up
            type: bridge
            interface_name: "{{ public_bridge_name }}"
            # interface_name defaults to the connection name
            ip:
              route:
                - network: 192.168.21.0
                  prefix: 24
                  gateway: 192.168.1.253
                - network: 192.168.23.0
                  prefix: 24
                  gateway: 192.168.1.162
                # - network: 192.168.25.0
                #   prefix: 24
                #   gateway: 192.168.1.252
              dhcp4: true
              auto6: true
  tasks:
  
    # check
    # still connected to Internet? 
    - name: Run shell commands to check routing
      ansible.builtin.shell:
        cmd: "{{ item }}"
      loop:
        - ip route list
        - ping -c 1 8.8.8.8
        - host www.google.com
        - curl --fail https://www.redhat.com/
      register: r_route_check

    - name: Display results
      ansible.builtin.debug:
        var: r_route_check
        
