---

# a simpler version of the far superior
# https://github.com/myllynen/aap-automation/tree/master
#
# installer package is installed on install_host.
# AAP repo  is temporarily enabled.
# setup is run on install_host.
# This is the only host with ansible_user SSH private key.

- name: Check access
  hosts: install_host:automationcontroller:automationhub:execution_node
  gather_facts: false
  become: true
  tasks:
    - name: Ping
      ansible.builtin.ping:


- name: AAP install
  hosts: install_host
  gather_facts: true
  become: true
  vars_files:
    - ~/vault-credentials.yml
  # roles:
  #   # Create 4 new certs
  #   # controlplane.site1.example.com is installed on all controllers in site1.
  #   # haproxy uses DNS name controlplane.site1.example.com and uses TLS pass-through.
  #   # Same for controlplane.site2.example.com, automationhub.site1.example.com, and automationhub.site2.example.com
  #   # Role places keys in /etc/pki/tls/private/ and certs in /etc/pki/tls/certs/
  #   - role: nick.platform.server_cert
  #     vars:
  #       server_cn: controlplane.site1.example.com
  #       subject_alt_name:
  #         - DNS:controlplane-1.site1.example.com
  #         - DNS:controlplane-2.site1.example.com
  #         - DNS:controlplane-3.site1.example.com
  #   - role: nick.platform.server_cert
  #     vars:
  #       server_cn: controlplane.site2.example.com
  #       subject_alt_name:
  #         - DNS:controlplane-1.site2.example.com
  #         - DNS:controlplane-2.site2.example.com
  #         - DNS:controlplane-3.site2.example.com
  #   - role: nick.platform.server_cert
  #     vars:
  #       server_cn: automationhub.site1.example.com
  #       subject_alt_name:
  #         - DNS:automationhub-1.site1.example.com
  #         - DNS:automationhub-2.site1.example.com
  #         - DNS:automationhub-3.site1.example.com
  #   - role: nick.platform.server_cert
  #     vars:
  #       server_cn: automationhub.site2.example.com
  #       subject_alt_name:
  #         - DNS:automationhub-1.site2.example.com
  #         - DNS:automationhub-2.site2.example.com
  #         - DNS:automationhub-3.site2.example.com

  tasks:

    # create /opt/ansible-automation-platform/installer/
    - name: Install Ansible Automation Platform installer package to create /opt/ansible-automation-platform/installer/
      ansible.builtin.dnf:
        name: ansible-automation-platform-installer
        enablerepo: ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms
        state: present
      register: r_installer_package

    - name: Ansible user and admins can use the installer directory
      ansible.builtin.file:
        path: /opt/ansible-automation-platform/installer
        owner: "{{ user_ansible_name }}"
        group: wheel
        mode: '2770'
        state: touch

    - name: Let ansible user write to setup.log
      ansible.builtin.file:
        path: /opt/ansible-automation-platform/installer/setup.log
        owner: "{{ user_ansible_name }}"
        mode: '0644'
        state: touch

    - ansible.builtin.shell:
        cmd: /usr/bin/id && /usr/bin/hostname
      register: r_id
    - ansible.builtin.debug:
        var: r_id


    - name: Copy keys to installer directory
      ansible.builtin.copy:
        src: "/etc/pki/tls/private/{{ item }}.key"
        remote_src: true
        dest: "/opt/ansible-automation-platform/installer/{{ item }}.key"
        owner: "{{ user_ansible_name }}"
        mode: '0440'
      loop:
        - controlplane.site1.example.com
        - controlplane.site2.example.com
        - automationhub.site1.example.com
        - automationhub.site2.example.com

    - name: Copy certs to installer directory
      ansible.builtin.copy:
        src: "/etc/pki/tls/certs/{{ item }}.pem"
        remote_src: true
        dest: "/opt/ansible-automation-platform/installer/{{ item }}.pem"
        owner: "{{ user_ansible_name }}"
      loop:
        - controlplane.site1.example.com
        - controlplane.site2.example.com
        - automationhub.site1.example.com
        - automationhub.site2.example.com

    # !!! plain text file containing sensitive info
    # move passwords to vault
    - name: Configure inventory file
      ansible.builtin.template:
        src: inventory-install-site1.ini.j2
        dest: /opt/ansible-automation-platform/installer/inventory
        mode: '0644'

    - name: Before launching setup.sh, check automation controller status
      ansible.builtin.uri:
        url: "https://controlplane-1.site1.example.com/ui/"
        method: GET
        validate_certs: false
      register: r_controller_info
      failed_when: false
      # ignore_errors: true
    # - name: Fail if controller is already running
    #   ansible.builtin.fail:
    #     msg: "Controller is already running at https://controlplane-1.site1.example.com/ui/"
    #   when: not r_controller_info['failed']

    # only run if the controller is not running, or
    # if the installer package has been updated
    # options
    # Use this if Hub doesn't have enough RAM to pass preflight check.
    # also consider -e ignore_preflight_errors=True
    #    cmd:  ./setup.sh -e required_ram=3072
    # Use this to print debug information.
    #    cmd:  ./setup.sh -- -vvv
    # Use this when behind a proxy.
    #    cmd: >
    #      ./setup.sh
    #      --
    #      --extra-vars  "http_proxy=http://gateway.{{ lab_domain }}:3128"
    #      --extra-vars "https_proxy=http://gateway.{{ lab_domain }}:3128"
    #      --extra-vars no_proxy=localhost,127.0.0.1,example.com
    - name: Run setup.sh for controller
      ansible.builtin.shell:
        cmd: >
          ./setup.sh
          --
          --extra-vars  "http_proxy=http://gateway.site1.example.com:3128"
          --extra-vars "https_proxy=http://gateway.site1.example.com:3128"
          --extra-vars no_proxy=localhost,127.0.0.1,example.com
        chdir: /opt/ansible-automation-platform/installer
      environment:
        ANSIBLE_BECOME: True
        ANSIBLE_NOCOWS: 1
        ANSIBLE_REMOTE_USER: ansible_user
        # ANSIBLE_PRIVATE_KEY_FILE: /home/nick/.ssh/ansible-key.priv
      # my user has SSH keys. Root doesn't.
      become: false
      when: r_installer_package is changed or
            r_controller_info.status != 200
